/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.5/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    //id 'java-library'
    // Added for the library
    id 'java'
    id 'maven-publish'
}
sourceSets.main.java.srcDirs = ['src/main']
sourceSets.test.java.srcDirs = ['src/test']
repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    //jcenter()

    // Added for the library
    mavenLocal()
    maven {
        url = uri('https://jitpack.io')
    }

    maven {
        url = uri('https://repo.osgeo.org/')
    }

    maven {
        url = uri('https://maven.geo-solutions.it/')
    }

    maven {
        url = uri('https://52north.org/maven/repo/releases/')
    }

    maven {
        url = uri('https://maven.openkm.com/')
    }

    maven {
        url = uri('https://repo.spring.io/plugins-release/')
    }

    maven {
        url = uri('https://maven.geotoolkit.org')
    }

    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    //api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    //implementation 'com.google.guava:guava:29.0-jre'

    // Use JUnit test framework
    //testImplementation 'junit:junit:4.13'

    // Added for the library
    implementation 'io.github.galbiston:geosparql-jena:1.1.2'
    implementation 'org.locationtech.jts:jts:1.16.1'
    implementation 'org.json:json:20180813'
    implementation 'org.apache.sis.core:sis-feature:2.0-SNAPSHOT'
    implementation 'org.apache.sis.core:sis-referencing:2.0-SNAPSHOT'
    implementation 'org.apache.jena:jena-core:3.16.0'
    implementation 'org.apache.jena:jena-arq:3.16.0'
    implementation 'commons-dbcp:commons-dbcp:1.4'
    implementation 'com.github.davidmoten:geo:0.7.1'
    implementation 'org.json:json:20180813'
    implementation 'org.slf4j:slf4j-api:2.0.0-alpha1'
    implementation 'org.wololo:jts2geojson:0.13.0'
    implementation 'org.locationtech.jts:jts:1.16.1'
    implementation 'net.postgis:postgis-jdbc:2.3.0'
    implementation 'org.postgresql:postgresql:42.1.1'
    implementation 'org.apache.sis.core:sis-feature:2.0-SNAPSHOT'
    implementation 'org.opengis:geoapi:4.0-M05'
    implementation 'org.apache.sis.storage:sis-storage:2.0-M0070'
    implementation 'org.apache.sis.storage:sis-netcdf:1.0'
    implementation 'org.apache.sis.core:sis-raster:1.0-M1'
    implementation 'org.apache.sis.storage:sis-geotiff:1.0'
    implementation 'org.apache.sis.core:sis-referencing:2.0-SNAPSHOT'
    implementation 'org.apache.sis.core:sis-referencing-by-identifiers:2.0-SNAPSHOT'
    implementation 'org.apache.sis.core:sis-metadata:2.0-SNAPSHOT'
    implementation 'org.apache.sis.core:sis-utility:2.0-SNAPSHOT'
    implementation 'com.clearspring.analytics:stream:2.9.6'
    implementation 'org.mapdb:mapdb:3.0.7'
    implementation 'it.geosolutions.jaiext:jaiext:1.1.11'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.11.3'
    implementation 'java3d:j3d-core:1.3.1'
    implementation 'joda-time:joda-time:2.10.2'
    implementation 'io.github.galbiston:expiring-map:1.0.1'
    implementation 'org.jdom:jdom2:2.0.6'
    implementation 'org.jaitools:jt-all:1.4.0'
    implementation 'org.apache.derby:derby:10.14.2.0'
    implementation 'com.sun.jersey:jersey-bundle:1.19'
    implementation 'com.sun.jersey:jersey-server:1.19'
    implementation 'com.github.twak:campskeleton:0.0.1'
    implementation 'es.unex.sextante:sextante:1.0'
    implementation 'org.gdal:gdal:3.0.0'
    implementation 'junit:junit:4.12'
    runtimeOnly 'org.apache.sis.non-free:sis-embedded-data:1.0'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.5.0'
}

group = 'SpatialIndexProcessor'
version = '0.0.2'
description = 'my jena geo'
java.sourceCompatibility = JavaVersion.VERSION_1_8


publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
